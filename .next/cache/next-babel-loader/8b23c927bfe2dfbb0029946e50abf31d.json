{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/mark/Desktop/gtau-fe-test/gtau-fe-test/gtau-fe-test/components/Listings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useReducer } from \"react\";\nvar ACTIONS = [\"View\", \"Reply\"];\n\nvar formatAsCurrency = function formatAsCurrency(_int) {// TODO\n};\n\nvar Listing = function Listing(props) {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n  return __jsx(\"div\", {\n    className: \"listing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }));\n};\n\n_c = Listing;\nvar INITIAL_STATE = {\n  loading: true,\n  error: '',\n  data: []\n};\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'SUCCESS':\n      return {\n        loading: false,\n        data: [],\n        //action.payload,\n        error: ''\n      };\n      break;\n\n    case 'ERROR':\n      return {\n        loading: false,\n        data: [],\n        error: 'failed to fetch data'\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar Listings = function Listings(props) {\n  _s();\n\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  var dataEndpoint = props.dataEndpoint,\n      keyword = props.keyword,\n      location = props.location;\n\n  var _useReducer = useReducer(reducer, INITIAL_STATE),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    fetch(dataEndpoint).then(function (response) {\n      if (response.status !== 200) {\n        dispatch({\n          type: 'ERROR'\n        });\n        return;\n      }\n\n      response.json().then(function (data) {\n        console.log(data);\n        dispatch({\n          type: 'SUCCESS',\n          payload: data\n        });\n      });\n    })[\"catch\"](function (error) {\n      dispatch({\n        type: 'ERROR'\n      });\n    });\n  }, []);\n  var loading = state.loading,\n      data = state.data,\n      error = state.error;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Search Results\"), !loading && data.length && __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, data.length, \" results\"), \" for \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 68\n    }\n  }, keyword), \" in \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 94\n    }\n  }, location))), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Listings, \"zpn/kx5Q6O+5t2dWmjRtda+kHzA=\");\n\n_c2 = Listings;\nexport default Listings;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Listing\");\n$RefreshReg$(_c2, \"Listings\");","map":{"version":3,"sources":["/home/mark/Desktop/gtau-fe-test/gtau-fe-test/gtau-fe-test/components/Listings.js"],"names":["useEffect","useReducer","ACTIONS","formatAsCurrency","int","Listing","props","INITIAL_STATE","loading","error","data","reducer","state","action","type","Listings","dataEndpoint","keyword","location","dispatch","fetch","then","response","status","json","console","log","payload","length"],"mappings":"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","sourcesContent":["import { useEffect, useReducer } from \"react\";\n\nconst ACTIONS = [\"View\", \"Reply\"];\n\nconst formatAsCurrency = (int) => {\n    // TODO\n};\n\nconst Listing = (props) => {\n    // TODO\n    // This should be the component which renders an individual listing to the page\n\n    \n\n    return (\n        <div className=\"listing\">\n            <h3></h3>\n\n        </div>\n    );\n};\n\nconst INITIAL_STATE = {\n    loading: true,\n    error: '',\n    data: [],\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'SUCCESS':\n            return {\n                loading: false,\n                data: [], //action.payload,\n                error: ''\n            }\n            break;\n        case 'ERROR':\n            return {\n                loading: false,\n                data: [],\n                error: 'failed to fetch data'\n            }\n        default:\n            return state;\n    }\n}\n\nconst Listings = (props) => {\n    // TODO\n    // This component should make a request to the api endpoint (props.dataEndpoint)\n    // then render the result as set of listings as per the design mocks\n    // check props passed in from parent for other values that you may need to use\n    const { dataEndpoint, keyword, location } = props;\n    const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\n    useEffect(() => {\n        fetch(dataEndpoint)\n            .then(response => {\n                if (response.status !== 200) {\n                    dispatch({ type: 'ERROR'})\n                    return;\n                }\n                response.json().then((data) => {\n                    console.log(data);\n                    dispatch({ type: 'SUCCESS', payload: data});\n                });\n            })\n            .catch(error => {\n                dispatch({ type: 'ERROR'})\n            })\n    }, []);\n    const { loading, data, error } = state;\n    return (\n        <div>\n            <div className=\"listings__header\">\n                <h2>Search Results</h2>\n                {\n                    !loading && data.length &&\n                        <>\n                            <span>{data.length} results</span> for <span>{keyword}</span> in <span>{location}</span>\n                        </>\n                }\n            </div>\n            <hr />\n            <div className=\"listings__grid\"></div>\n        </div>\n    );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}