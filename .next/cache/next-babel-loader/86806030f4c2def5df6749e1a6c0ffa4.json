{"ast":null,"code":"var _jsxFileName = \"/home/mark/Desktop/gtau-fe-test-mark/components/Listings.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useReducer } from \"react\";\nconst ACTIONS = [\"View\", \"Reply\"];\n\nconst formatAsCurrency = int => {\n  // TODO\n  if (typeof int === 'number') {\n    let priceInThousands = Math.round(int / 1000) * 1000;\n    return '$' + priceInThousands.toLocaleString();\n  }\n\n  return int;\n};\n\nconst Listing = ({\n  title,\n  description,\n  imgUrl,\n  location,\n  price\n}) => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n  return __jsx(\"div\", {\n    className: \"listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: \"listing__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, title), __jsx(\"div\", {\n    className: \"listing__subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"listing__price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, formatAsCurrency(price)), __jsx(\"div\", {\n    className: \"listing__location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, location))), imgUrl && __jsx(\"div\", {\n    className: \"listing__img-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    alt: title,\n    src: imgUrl,\n    className: \"listing__img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  })), __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, description && __jsx(\"p\", {\n    className: \"listing__description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 34\n    }\n  }, description)), __jsx(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, ACTIONS.map(action => __jsx(\"button\", {\n    key: action,\n    onClick: () => console.log(`${action} : ${title}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, action))));\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SUCCESS':\n      return {\n        loading: false,\n        data: action.payload,\n        error: ''\n      };\n\n    case 'ERROR':\n      return {\n        loading: false,\n        data: [],\n        error: action.payload || 'failed to fetch data'\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Listings = ({\n  dataEndpoint,\n  keyword,\n  location\n}) => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, {\n    loading: true,\n    error: '',\n    data: []\n  });\n  useEffect(() => {\n    fetch(dataEndpoint).then(function (response) {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      return response;\n    }).then(function (response) {\n      response.json().then(data => {\n        dispatch({\n          type: 'SUCCESS',\n          payload: data\n        });\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: 'ERROR',\n        payload: error.toString()\n      });\n    });\n  }, []);\n  const {\n    loading,\n    data,\n    error\n  } = state;\n  return __jsx(\"div\", {\n    className: \"listings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, loading && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 26\n    }\n  }, \"...Loading\"), !error && !loading && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"Search Results\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, data.length, \" results\"), \" for \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 68\n    }\n  }, keyword), \" in \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 94\n    }\n  }, location))), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, data.map((item, index) => __jsx(Listing, _extends({\n    key: index\n  }, item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 51\n    }\n  }))))), error && __jsx(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"error__msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, error)));\n};\n\nexport default Listings;","map":{"version":3,"sources":["/home/mark/Desktop/gtau-fe-test-mark/components/Listings.js"],"names":["React","useEffect","useReducer","ACTIONS","formatAsCurrency","int","priceInThousands","Math","round","toLocaleString","Listing","title","description","imgUrl","location","price","map","action","console","log","reducer","state","type","loading","data","payload","error","Listings","dataEndpoint","keyword","dispatch","fetch","then","response","ok","Error","statusText","json","catch","toString","length","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\n\nconst ACTIONS = [\"View\", \"Reply\"];\n\nconst formatAsCurrency = (int) => {\n    // TODO\n    if (typeof int === 'number') {\n        let priceInThousands = Math.round(int/1000)*1000;\n        return '$' + priceInThousands.toLocaleString();\n    }\n    return int;\n};\n\nconst Listing = ({ title, description, imgUrl, location, price }) => {\n    // TODO\n    // This should be the component which renders an individual listing to the page\n\n    return (\n        <div className=\"listing\">\n            <header>\n                <h3 className=\"listing__title\">{title}</h3>\n                <div className=\"listing__subtitle\">\n                    <div className=\"listing__price\">{formatAsCurrency(price)}</div>\n                    <div className=\"listing__location\">{location}</div>\n                </div>\n            </header>\n            {\n                imgUrl &&\n                <div className=\"listing__img-wrap\">\n                    <img alt={title} src={imgUrl} className=\"listing__img\"/>\n                </div>\n            }\n            <article>\n                { description && <p className=\"listing__description\">{ description }</p> }\n            </article>\n            <footer>\n                {\n                    ACTIONS.map(action =>\n                        <button key={action} onClick={() => console.log(`${action} : ${title}`)}>\n                            {action}\n                        </button>)\n                }\n            </footer>\n        </div>\n    );\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'SUCCESS':\n            return {\n                loading: false,\n                data: action.payload,\n                error: ''\n            }\n        case 'ERROR':\n            return {\n                loading: false,\n                data: [],\n                error: action.payload || 'failed to fetch data'\n            }\n        default:\n            return state;\n    }\n}\n\nconst Listings = ({ dataEndpoint, keyword, location }) => {\n    // TODO\n    // This component should make a request to the api endpoint (props.dataEndpoint)\n    // then render the result as set of listings as per the design mocks\n    // check props passed in from parent for other values that you may need to use\n    const [state, dispatch] = useReducer(reducer, {\n            loading: true, error: '', data: []\n        });\n    useEffect(() => {\n        fetch(dataEndpoint)\n            .then(function(response) {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response;\n            }).then(function(response) {\n                response.json().then((data) => {\n                    dispatch({ type: 'SUCCESS', payload: data});\n                });\n            }).catch(function(error) {\n                dispatch({ type: 'ERROR', payload: error.toString() })\n            });\n    }, []);\n    const { loading, data, error } = state;\n    return (\n        <div className=\"listings\">\n            { loading && <div>...Loading</div> }\n            { !error && !loading &&\n                <>\n                    <div className=\"listings__header\">\n                        <h2>Search Results</h2>\n                        <p>\n                            <span>{data.length} results</span> for <span>{keyword}</span> in <span>{location}</span>\n                        </p>\n                    </div>\n                    <div className=\"listings__grid\">\n                        {data.map((item, index) =><Listing key={index }{ ...item } />)}\n                    </div>\n                </>\n            }\n            { error &&\n                <div className=\"error\">\n                    <div className=\"error__msg\">{error}</div>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}