{"ast":null,"code":"var _jsxFileName = \"/home/mark/Desktop/gtau-fe-test/gtau-fe-test/gtau-fe-test/components/Listings.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useReducer } from \"react\";\nconst ACTIONS = [\"View\", \"Reply\"];\n\nconst formatAsCurrency = int => {\n  // TODO\n  if (typeof int === 'number') {\n    return '$' + int.toLocaleString();\n  }\n\n  return int;\n};\n\nconst Listing = ({\n  title,\n  description,\n  imgUrl,\n  location,\n  price\n}) => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n  const handleAction = (action, title) => {\n    console.log('action', action, title);\n  };\n\n  return __jsx(\"div\", {\n    className: \"listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: \"listing__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, title), __jsx(\"div\", {\n    className: \"listing__subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"listing__price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, formatAsCurrency(price)), __jsx(\"div\", {\n    className: \"listing__location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, location))), imgUrl && __jsx(\"div\", {\n    className: \"listing__img-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    alt: title,\n    src: imgUrl,\n    className: \"listing__img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  })), __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, description && __jsx(\"p\", {\n    className: \"listing__description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 34\n    }\n  }, description)), __jsx(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, ACTIONS.map(action => __jsx(\"button\", {\n    key: action,\n    onClick: () => handleAction(action, title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, action))));\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SUCCESS':\n      return {\n        loading: false,\n        data: action.payload,\n        error: ''\n      };\n\n    case 'ERROR':\n      return {\n        loading: false,\n        data: [],\n        error: 'failed to fetch data'\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst BlueSpan = ({\n  txt\n}) => __jsx(\"span\", {\n  className: \"text-primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 31\n  }\n}, txt);\n\nconst Listings = ({\n  dataEndpoint,\n  keyword,\n  location\n}) => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, {\n    loading: true,\n    error: '',\n    data: []\n  });\n  useEffect(() => {\n    fetch(dataEndpoint).then(response => {\n      if (response.status !== 200) {\n        dispatch({\n          type: 'ERROR'\n        });\n        return;\n      }\n\n      response.json().then(data => {\n        dispatch({\n          type: 'SUCCESS',\n          payload: data\n        });\n      });\n    }).catch(error => {\n      dispatch({\n        type: 'ERROR'\n      });\n    });\n  }, []);\n  const {\n    loading,\n    data,\n    error\n  } = state;\n  return __jsx(\"div\", {\n    className: \"listings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Search Results\"), !loading && __jsx(\"p\", {\n    className: \"listings__subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, __jsx(BlueSpan, {\n    txt: data.length + 'results',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }), \" for \", __jsx(BlueSpan, {\n    txt: keyword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 73\n    }\n  }), \" in \", __jsx(BlueSpan, {\n    txt: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 103\n    }\n  }))), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, data.length > 0 && data.map((item, index) => __jsx(Listing, _extends({\n    key: index\n  }, item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 50\n    }\n  })))));\n};\n\nexport default Listings;","map":{"version":3,"sources":["/home/mark/Desktop/gtau-fe-test/gtau-fe-test/gtau-fe-test/components/Listings.js"],"names":["React","useEffect","useReducer","ACTIONS","formatAsCurrency","int","toLocaleString","Listing","title","description","imgUrl","location","price","handleAction","action","console","log","map","reducer","state","type","loading","data","payload","error","BlueSpan","txt","Listings","dataEndpoint","keyword","dispatch","fetch","then","response","status","json","catch","length","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\n\nconst ACTIONS = [\"View\", \"Reply\"];\n\nconst formatAsCurrency = (int) => {\n    // TODO\n    if (typeof int === 'number') {\n        return '$' + int.toLocaleString();\n    }\n    return int;\n};\n\nconst Listing = ({ title, description, imgUrl, location, price }) => {\n    // TODO\n    // This should be the component which renders an individual listing to the page\n\n    const handleAction = (action, title) => {\n        console.log('action', action, title)\n    }\n\n    return (\n        <div className=\"listing\">\n            <header>\n                <h3 className=\"listing__title\">{title}</h3>\n                <div className=\"listing__subtitle\">\n                    <div className=\"listing__price\">{formatAsCurrency(price)}</div>\n                    <div className=\"listing__location\">{location}</div>\n                </div>\n            </header>\n            {\n                imgUrl &&\n                <div className=\"listing__img-wrap\">\n                    <img alt={title} src={imgUrl} className=\"listing__img\"/>\n                </div>\n            }\n            <article>\n                { description && <p className=\"listing__description\">{ description }</p> }\n            </article>\n            <footer>\n                {\n                    ACTIONS.map(action =>\n                        <button key={action} onClick={() => handleAction(action, title)}>\n                            {action}\n                        </button>)\n                }\n            </footer>\n        </div>\n    );\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'SUCCESS':\n            return {\n                loading: false,\n                data: action.payload,\n                error: ''\n            }\n        case 'ERROR':\n            return {\n                loading: false,\n                data: [],\n                error: 'failed to fetch data'\n            }\n        default:\n            return state;\n    }\n}\n\nconst BlueSpan = ({ txt }) => <span className=\"text-primary\">{txt}</span>;\n\nconst Listings = ({ dataEndpoint, keyword, location }) => {\n    // TODO\n    // This component should make a request to the api endpoint (props.dataEndpoint)\n    // then render the result as set of listings as per the design mocks\n    // check props passed in from parent for other values that you may need to use\n    const [state, dispatch] = useReducer(reducer, {\n            loading: true, error: '', data: []\n        });\n    useEffect(() => {\n        fetch(dataEndpoint)\n            .then(response => {\n                if (response.status !== 200) {\n                    dispatch({ type: 'ERROR'})\n                    return;\n                }\n                response.json().then((data) => {\n                    dispatch({ type: 'SUCCESS', payload: data});\n                });\n            })\n            .catch(error => {\n                dispatch({ type: 'ERROR'})\n            })\n    }, []);\n    const { loading, data, error } = state;\n    return (\n        <div className=\"listings\">\n            <div className=\"listings__header\">\n                <h2>Search Results</h2>\n                {\n                    !loading &&\n                    <p className=\"listings__subtitle\">\n                        <BlueSpan txt={ data.length + 'results'} /> for <BlueSpan txt={keyword} /> in <BlueSpan txt={location} />\n                    </p>\n                }\n            </div>\n            <div className=\"listings__grid\">\n                {\n                    (data.length > 0) &&\n                        data.map((item, index) =><Listing key={index }{ ...item } />)\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}